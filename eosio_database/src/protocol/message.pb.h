// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_INCLUDED_message_2eproto
#define PROTOBUF_INCLUDED_message_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_message_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_message_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_message_2eproto();
namespace action_message {
class error;
class errorDefaultTypeInternal;
extern errorDefaultTypeInternal _error_default_instance_;
class meta;
class metaDefaultTypeInternal;
extern metaDefaultTypeInternal _meta_default_instance_;
class rpc_request;
class rpc_requestDefaultTypeInternal;
extern rpc_requestDefaultTypeInternal _rpc_request_default_instance_;
class rpc_response;
class rpc_responseDefaultTypeInternal;
extern rpc_responseDefaultTypeInternal _rpc_response_default_instance_;
}  // namespace action_message
namespace google {
namespace protobuf {
template<> ::action_message::error* Arena::CreateMaybeMessage<::action_message::error>(Arena*);
template<> ::action_message::meta* Arena::CreateMaybeMessage<::action_message::meta>(Arena*);
template<> ::action_message::rpc_request* Arena::CreateMaybeMessage<::action_message::rpc_request>(Arena*);
template<> ::action_message::rpc_response* Arena::CreateMaybeMessage<::action_message::rpc_response>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace action_message {

enum object_type {
  null_object_type = 0,
  account_object_type = 1,
  account_sequence_object_type = 2,
  permission_object_type = 3,
  permission_usage_object_type = 4,
  permission_link_object_type = 5,
  UNUSED_action_code_object_type = 6,
  key_value_object_type = 7,
  index64_object_type = 8,
  index128_object_type = 9,
  index256_object_type = 10,
  index_double_object_type = 11,
  index_long_double_object_type = 12,
  global_property_object_type = 13,
  dynamic_global_property_object_type = 14,
  block_summary_object_type = 15,
  transaction_object_type = 16,
  generated_transaction_object_type = 17,
  producer_object_type = 18,
  UNUSED_chain_property_object_type = 19,
  account_control_history_object_type = 20,
  UNUSED_account_transaction_history_object_type = 21,
  UNUSED_transaction_history_object_type = 22,
  public_key_history_object_type = 23,
  UNUSED_balance_object_type = 24,
  UNUSED_staked_balance_object_type = 25,
  UNUSED_producer_votes_object_type = 26,
  UNUSED_producer_schedule_object_type = 27,
  UNUSED_proxy_vote_object_type = 28,
  UNUSED_scope_sequence_object_type = 29,
  table_id_object_type = 30,
  resource_limits_object_type = 31,
  resource_usage_object_type = 32,
  resource_limits_state_object_type = 33,
  resource_limits_config_object_type = 34,
  account_history_object_type = 35,
  action_history_object_type = 36,
  reversible_block_object_type = 37,
  signed_block_object_type = 40,
  block_state_object_type = 41
};
bool object_type_IsValid(int value);
const object_type object_type_MIN = null_object_type;
const object_type object_type_MAX = block_state_object_type;
const int object_type_ARRAYSIZE = object_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* object_type_descriptor();
inline const ::std::string& object_type_Name(object_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    object_type_descriptor(), value);
}
inline bool object_type_Parse(
    const ::std::string& name, object_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<object_type>(
    object_type_descriptor(), name, value);
}
enum message_id {
  account_create_request = 1000,
  account_create_response = 1001,
  account_guery_request = 1002,
  account_query_response = 1003,
  account_update_request = 1004,
  account_update_response = 1005,
  account_remove_request = 1006,
  account_remove_response = 1007,
  account_sequence_create_request = 1008,
  account_sequence_create_response = 1009,
  account_sequence_query_request = 1010,
  account_sequence_query_response = 1011,
  account_sequence_update_request = 1012,
  account_sequence_update_response = 1013,
  account_sequence_remove_request = 1014,
  account_sequence_remove_response = 1015,
  permission_create_request = 1016,
  permission_create_response = 1017,
  permission_query_request = 1018,
  permission_query_response = 1019,
  permission_update_request = 1020,
  permission_update_response = 1021,
  permission_remove_request = 1022,
  permission_remove_response = 1023,
  permission_usage_create_request = 1024,
  permission_usage_create_response = 1025,
  permission_usage_query_request = 1026,
  permission_usage_query_response = 1027,
  permission_usage_update_request = 1028,
  permission_usage_update_response = 1029,
  permission_usage_remove_request = 1030,
  permission_usage_remove_response = 1031,
  permission_link_create_request = 1032,
  permission_link_create_response = 1033,
  permission_link_query_request = 1034,
  permission_link_query_response = 1035,
  permission_link_update_request = 1036,
  permission_link_update_response = 1037,
  permission_link_remove_request = 1038,
  permission_link_remove_response = 1040,
  key_value_create_request = 1041,
  key_value_create_response = 1042,
  key_value_query_request = 1043,
  key_value_query_response = 1044,
  key_value_update_request = 1045,
  key_value_update_response = 1046,
  key_value_remove_request = 1047,
  key_value_remove_response = 1048,
  index64_create_request = 1049,
  index64_create_response = 1050,
  index64_query_request = 1051,
  index64_query_response = 1052,
  index64_update_request = 1053,
  index64_update_response = 1054,
  index64_remove_request = 1055,
  index64_remove_response = 1056,
  index128_create_request = 1057,
  index128_create_response = 1058,
  index128_query_request = 1060,
  index128_query_response = 1061,
  index128_update_request = 1062,
  index128_update_response = 1063,
  index128_remove_request = 1064,
  index128_remove_response = 1065,
  index256_create_request = 1066,
  index256_create_response = 1067,
  index256_query_request = 1068,
  index256_query_response = 1069,
  index256_update_request = 1070,
  index256_update_response = 1071,
  index256_remove_request = 1072,
  index256_remove_response = 1073,
  index_double_create_request = 1074,
  index_double_create_response = 1075,
  index_double_query_request = 1076,
  index_double_query_response = 1077,
  index_double_update_request = 1078,
  index_double_update_response = 1079,
  index_double_remove_request = 1080,
  index_double_remove_response = 1081,
  index_long_double_create_request = 1082,
  index_long_double_create_response = 1083,
  index_long_double_query_request = 1084,
  index_long_double_query_response = 1085,
  index_long_double_update_request = 1086,
  index_long_double_update_response = 1087,
  index_long_double_remove_request = 1088,
  index_long_double_remove_response = 1089,
  global_property_create_request = 1090,
  global_property_create_response = 1091,
  global_property_query_request = 1092,
  global_property_query_response = 1093,
  global_property_update_request = 1094,
  global_property_update_response = 1095,
  global_property_remove_request = 1096,
  global_property_remove_response = 1097,
  dynamic_global_property_create_request = 1098,
  dynamic_global_property_create_response = 1099,
  dynamic_global_property_query_request = 1100,
  dynamic_global_property_query_response = 1101,
  dynamic_global_property_update_request = 1102,
  dynamic_global_property_update_response = 1103,
  dynamic_global_property_remove_request = 1104,
  dynamic_global_property_remove_response = 1105,
  block_summary_create_request = 1106,
  block_summary_create_response = 1107,
  block_summary_query_request = 1108,
  block_summary_query_response = 1109,
  block_summary_update_request = 1110,
  block_summary_update_response = 1111,
  block_summary_remove_request = 1112,
  block_summary_remove_response = 1113,
  transaction_create_request = 1114,
  transaction_create_response = 1115,
  transaction_query_request = 1116,
  transaction_query_response = 1117,
  transaction_update_request = 1118,
  transaction_update_response = 1119,
  transaction_remove_request = 1120,
  transaction_remove_response = 1121,
  generated_transaction_create_request = 1122,
  generated_transaction_create_response = 1123,
  generated_transaction_query_request = 1124,
  generated_transaction_query_response = 1125,
  generated_transaction_update_request = 1126,
  generated_transaction_update_response = 1127,
  generated_transaction_remove_request = 1128,
  generated_transaction_remove_response = 1129,
  producer_create_request = 1130,
  producer_create_response = 1131,
  producer_query_request = 1132,
  producer_query_response = 1133,
  producer_update_request = 1134,
  producer_update_response = 1135,
  producer_remove_request = 1136,
  producer_remove_response = 1137,
  account_control_history_create_request = 1138,
  account_control_history_create_response = 1139,
  account_control_history_query_request = 1140,
  account_control_history_query_response = 1141,
  account_control_history_update_request = 1142,
  account_control_history_update_response = 1143,
  account_control_history_remove_request = 1144,
  account_control_history_remove_response = 1145,
  public_key_history_create_request = 1146,
  public_key_history_create_response = 1147,
  public_key_history_query_request = 1148,
  public_key_history_query_response = 1149,
  public_key_history_update_request = 1150,
  public_key_history_update_response = 1151,
  public_key_history_remove_request = 1152,
  public_key_history_remove_response = 1153,
  table_id_create_request = 1154,
  table_id_create_response = 1155,
  table_id_query_request = 1156,
  table_id_query_response = 1157,
  table_id_update_request = 1158,
  table_id_update_response = 1159,
  table_id_remove_request = 1160,
  table_id_remove_response = 1161,
  resource_limits_create_request = 1162,
  resource_limits_create_response = 1163,
  resource_limits_query_request = 1164,
  resource_limits_query_response = 1165,
  resource_limits_update_request = 1166,
  resource_limits_update_response = 1167,
  resource_limits_remove_request = 1168,
  resource_limits_remove_response = 1169,
  resource_usage_create_request = 1170,
  resource_usage_create_response = 1171,
  resource_usage_query_request = 1172,
  resource_usage_query_response = 1173,
  resource_usage_update_request = 1174,
  resource_usage_update_response = 1175,
  resource_usage_remove_request = 1176,
  resource_usage_remove_response = 1177,
  resource_limits_state_create_request = 1178,
  resource_limits_state_create_response = 1179,
  resource_limits_state_query_request = 1180,
  resource_limits_state_query_response = 1181,
  resource_limits_state_update_request = 1182,
  resource_limits_state_update_response = 1183,
  resource_limits_state_remove_request = 1184,
  resource_limits_state_remove_response = 1185,
  resource_limits_config_create_request = 1186,
  resource_limits_config_create_response = 1187,
  resource_limits_config_query_request = 1188,
  resource_limits_config_query_response = 1189,
  resource_limits_config_update_request = 1190,
  resource_limits_config_update_response = 1191,
  resource_limits_config_remove_request = 1192,
  resource_limits_config_remove_response = 1193,
  account_history_create_request = 1194,
  account_history_create_response = 1195,
  account_history_query_request = 1196,
  account_history_query_response = 1197,
  account_history_update_request = 1198,
  account_history_update_response = 1199,
  account_history_remove_request = 1200,
  account_history_remove_response = 1201,
  action_history_create_request = 1202,
  action_history_create_response = 1203,
  action_history_query_request = 1204,
  action_history_query_response = 1205,
  action_history_update_request = 1206,
  action_history_update_response = 1207,
  action_history_remove_request = 1208,
  action_history_remove_response = 1209,
  reversible_block_create_request = 1210,
  reversible_block_create_response = 1211,
  reversible_block_query_request = 1212,
  reversible_block_query_response = 1213,
  reversible_block_update_request = 1214,
  reversible_block_update_response = 1215,
  reversible_block_remove_request = 1216,
  reversible_block_remove_response = 1217,
  permission_level_check_request = 2000,
  permission_level_check_response = 2001
};
bool message_id_IsValid(int value);
const message_id message_id_MIN = account_create_request;
const message_id message_id_MAX = permission_level_check_response;
const int message_id_ARRAYSIZE = message_id_MAX + 1;

const ::google::protobuf::EnumDescriptor* message_id_descriptor();
inline const ::std::string& message_id_Name(message_id value) {
  return ::google::protobuf::internal::NameOfEnum(
    message_id_descriptor(), value);
}
inline bool message_id_Parse(
    const ::std::string& name, message_id* value) {
  return ::google::protobuf::internal::ParseNamedEnum<message_id>(
    message_id_descriptor(), name, value);
}
// ===================================================================

class error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:action_message.error) */ {
 public:
  error();
  virtual ~error();

  error(const error& from);

  inline error& operator=(const error& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  error(error&& from) noexcept
    : error() {
    *this = ::std::move(from);
  }

  inline error& operator=(error&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const error& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const error* internal_default_instance() {
    return reinterpret_cast<const error*>(
               &_error_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(error* other);
  friend void swap(error& a, error& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline error* New() const final {
    return CreateMaybeMessage<error>(NULL);
  }

  error* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<error>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const error& from);
  void MergeFrom(const error& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(error* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional uint32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::uint32 code() const;
  void set_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:action_message.error)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::uint32 code_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class meta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:action_message.meta) */ {
 public:
  meta();
  virtual ~meta();

  meta(const meta& from);

  inline meta& operator=(const meta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  meta(meta&& from) noexcept
    : meta() {
    *this = ::std::move(from);
  }

  inline meta& operator=(meta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const meta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const meta* internal_default_instance() {
    return reinterpret_cast<const meta*>(
               &_meta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(meta* other);
  friend void swap(meta& a, meta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline meta* New() const final {
    return CreateMaybeMessage<meta>(NULL);
  }

  meta* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<meta>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const meta& from);
  void MergeFrom(const meta& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(meta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 service_id = 2;
  bool has_service_id() const;
  void clear_service_id();
  static const int kServiceIdFieldNumber = 2;
  ::google::protobuf::uint32 service_id() const;
  void set_service_id(::google::protobuf::uint32 value);

  // optional uint32 method_id = 3;
  bool has_method_id() const;
  void clear_method_id();
  static const int kMethodIdFieldNumber = 3;
  ::google::protobuf::uint32 method_id() const;
  void set_method_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:action_message.meta)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 service_id_;
  ::google::protobuf::uint32 method_id_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class rpc_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:action_message.rpc_request) */ {
 public:
  rpc_request();
  virtual ~rpc_request();

  rpc_request(const rpc_request& from);

  inline rpc_request& operator=(const rpc_request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  rpc_request(rpc_request&& from) noexcept
    : rpc_request() {
    *this = ::std::move(from);
  }

  inline rpc_request& operator=(rpc_request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const rpc_request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const rpc_request* internal_default_instance() {
    return reinterpret_cast<const rpc_request*>(
               &_rpc_request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(rpc_request* other);
  friend void swap(rpc_request& a, rpc_request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline rpc_request* New() const final {
    return CreateMaybeMessage<rpc_request>(NULL);
  }

  rpc_request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<rpc_request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const rpc_request& from);
  void MergeFrom(const rpc_request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(rpc_request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional .action_message.meta head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  const ::action_message::meta& head() const;
  ::action_message::meta* release_head();
  ::action_message::meta* mutable_head();
  void set_allocated_head(::action_message::meta* head);

  // optional .action_message.object_type type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::action_message::object_type type() const;
  void set_type(::action_message::object_type value);

  // optional .action_message.message_id msg_id = 3;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  ::action_message::message_id msg_id() const;
  void set_msg_id(::action_message::message_id value);

  // @@protoc_insertion_point(class_scope:action_message.rpc_request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::action_message::meta* head_;
  int type_;
  int msg_id_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class rpc_response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:action_message.rpc_response) */ {
 public:
  rpc_response();
  virtual ~rpc_response();

  rpc_response(const rpc_response& from);

  inline rpc_response& operator=(const rpc_response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  rpc_response(rpc_response&& from) noexcept
    : rpc_response() {
    *this = ::std::move(from);
  }

  inline rpc_response& operator=(rpc_response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const rpc_response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const rpc_response* internal_default_instance() {
    return reinterpret_cast<const rpc_response*>(
               &_rpc_response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(rpc_response* other);
  friend void swap(rpc_response& a, rpc_response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline rpc_response* New() const final {
    return CreateMaybeMessage<rpc_response>(NULL);
  }

  rpc_response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<rpc_response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const rpc_response& from);
  void MergeFrom(const rpc_response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(rpc_response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional .action_message.error err = 3;
  bool has_err() const;
  void clear_err();
  static const int kErrFieldNumber = 3;
  const ::action_message::error& err() const;
  ::action_message::error* release_err();
  ::action_message::error* mutable_err();
  void set_allocated_err(::action_message::error* err);

  // optional .action_message.object_type type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::action_message::object_type type() const;
  void set_type(::action_message::object_type value);

  // optional .action_message.message_id msg_id = 1;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  ::action_message::message_id msg_id() const;
  void set_msg_id(::action_message::message_id value);

  // @@protoc_insertion_point(class_scope:action_message.rpc_response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::action_message::error* err_;
  int type_;
  int msg_id_;
  friend struct ::TableStruct_message_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// error

// optional uint32 code = 1;
inline bool error::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void error::clear_code() {
  code_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 error::code() const {
  // @@protoc_insertion_point(field_get:action_message.error.code)
  return code_;
}
inline void error::set_code(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  code_ = value;
  // @@protoc_insertion_point(field_set:action_message.error.code)
}

// optional string msg = 2;
inline bool error::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void error::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& error::msg() const {
  // @@protoc_insertion_point(field_get:action_message.error.msg)
  return msg_.GetNoArena();
}
inline void error::set_msg(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:action_message.error.msg)
}
#if LANG_CXX11
inline void error::set_msg(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:action_message.error.msg)
}
#endif
inline void error::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:action_message.error.msg)
}
inline void error::set_msg(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:action_message.error.msg)
}
inline ::std::string* error::mutable_msg() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:action_message.error.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* error::release_msg() {
  // @@protoc_insertion_point(field_release:action_message.error.msg)
  if (!has_msg()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void error::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:action_message.error.msg)
}

// -------------------------------------------------------------------

// meta

// optional uint32 id = 1;
inline bool meta::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void meta::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 meta::id() const {
  // @@protoc_insertion_point(field_get:action_message.meta.id)
  return id_;
}
inline void meta::set_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
  // @@protoc_insertion_point(field_set:action_message.meta.id)
}

// optional uint32 service_id = 2;
inline bool meta::has_service_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void meta::clear_service_id() {
  service_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 meta::service_id() const {
  // @@protoc_insertion_point(field_get:action_message.meta.service_id)
  return service_id_;
}
inline void meta::set_service_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  service_id_ = value;
  // @@protoc_insertion_point(field_set:action_message.meta.service_id)
}

// optional uint32 method_id = 3;
inline bool meta::has_method_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void meta::clear_method_id() {
  method_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 meta::method_id() const {
  // @@protoc_insertion_point(field_get:action_message.meta.method_id)
  return method_id_;
}
inline void meta::set_method_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  method_id_ = value;
  // @@protoc_insertion_point(field_set:action_message.meta.method_id)
}

// -------------------------------------------------------------------

// rpc_request

// optional .action_message.meta head = 1;
inline bool rpc_request::has_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rpc_request::clear_head() {
  if (head_ != NULL) head_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::action_message::meta& rpc_request::head() const {
  const ::action_message::meta* p = head_;
  // @@protoc_insertion_point(field_get:action_message.rpc_request.head)
  return p != NULL ? *p : *reinterpret_cast<const ::action_message::meta*>(
      &::action_message::_meta_default_instance_);
}
inline ::action_message::meta* rpc_request::release_head() {
  // @@protoc_insertion_point(field_release:action_message.rpc_request.head)
  _has_bits_[0] &= ~0x00000002u;
  ::action_message::meta* temp = head_;
  head_ = NULL;
  return temp;
}
inline ::action_message::meta* rpc_request::mutable_head() {
  _has_bits_[0] |= 0x00000002u;
  if (head_ == NULL) {
    auto* p = CreateMaybeMessage<::action_message::meta>(GetArenaNoVirtual());
    head_ = p;
  }
  // @@protoc_insertion_point(field_mutable:action_message.rpc_request.head)
  return head_;
}
inline void rpc_request::set_allocated_head(::action_message::meta* head) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete head_;
  }
  if (head) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      head = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, head, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  head_ = head;
  // @@protoc_insertion_point(field_set_allocated:action_message.rpc_request.head)
}

// optional .action_message.object_type type = 2;
inline bool rpc_request::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void rpc_request::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::action_message::object_type rpc_request::type() const {
  // @@protoc_insertion_point(field_get:action_message.rpc_request.type)
  return static_cast< ::action_message::object_type >(type_);
}
inline void rpc_request::set_type(::action_message::object_type value) {
  assert(::action_message::object_type_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
  // @@protoc_insertion_point(field_set:action_message.rpc_request.type)
}

// optional .action_message.message_id msg_id = 3;
inline bool rpc_request::has_msg_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void rpc_request::clear_msg_id() {
  msg_id_ = 1000;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::action_message::message_id rpc_request::msg_id() const {
  // @@protoc_insertion_point(field_get:action_message.rpc_request.msg_id)
  return static_cast< ::action_message::message_id >(msg_id_);
}
inline void rpc_request::set_msg_id(::action_message::message_id value) {
  assert(::action_message::message_id_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:action_message.rpc_request.msg_id)
}

// optional bytes data = 4;
inline bool rpc_request::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rpc_request::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& rpc_request::data() const {
  // @@protoc_insertion_point(field_get:action_message.rpc_request.data)
  return data_.GetNoArena();
}
inline void rpc_request::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:action_message.rpc_request.data)
}
#if LANG_CXX11
inline void rpc_request::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:action_message.rpc_request.data)
}
#endif
inline void rpc_request::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:action_message.rpc_request.data)
}
inline void rpc_request::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:action_message.rpc_request.data)
}
inline ::std::string* rpc_request::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:action_message.rpc_request.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* rpc_request::release_data() {
  // @@protoc_insertion_point(field_release:action_message.rpc_request.data)
  if (!has_data()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void rpc_request::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:action_message.rpc_request.data)
}

// -------------------------------------------------------------------

// rpc_response

// optional .action_message.message_id msg_id = 1;
inline bool rpc_response::has_msg_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void rpc_response::clear_msg_id() {
  msg_id_ = 1000;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::action_message::message_id rpc_response::msg_id() const {
  // @@protoc_insertion_point(field_get:action_message.rpc_response.msg_id)
  return static_cast< ::action_message::message_id >(msg_id_);
}
inline void rpc_response::set_msg_id(::action_message::message_id value) {
  assert(::action_message::message_id_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:action_message.rpc_response.msg_id)
}

// optional .action_message.object_type type = 2;
inline bool rpc_response::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void rpc_response::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::action_message::object_type rpc_response::type() const {
  // @@protoc_insertion_point(field_get:action_message.rpc_response.type)
  return static_cast< ::action_message::object_type >(type_);
}
inline void rpc_response::set_type(::action_message::object_type value) {
  assert(::action_message::object_type_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
  // @@protoc_insertion_point(field_set:action_message.rpc_response.type)
}

// optional .action_message.error err = 3;
inline bool rpc_response::has_err() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rpc_response::clear_err() {
  if (err_ != NULL) err_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::action_message::error& rpc_response::err() const {
  const ::action_message::error* p = err_;
  // @@protoc_insertion_point(field_get:action_message.rpc_response.err)
  return p != NULL ? *p : *reinterpret_cast<const ::action_message::error*>(
      &::action_message::_error_default_instance_);
}
inline ::action_message::error* rpc_response::release_err() {
  // @@protoc_insertion_point(field_release:action_message.rpc_response.err)
  _has_bits_[0] &= ~0x00000002u;
  ::action_message::error* temp = err_;
  err_ = NULL;
  return temp;
}
inline ::action_message::error* rpc_response::mutable_err() {
  _has_bits_[0] |= 0x00000002u;
  if (err_ == NULL) {
    auto* p = CreateMaybeMessage<::action_message::error>(GetArenaNoVirtual());
    err_ = p;
  }
  // @@protoc_insertion_point(field_mutable:action_message.rpc_response.err)
  return err_;
}
inline void rpc_response::set_allocated_err(::action_message::error* err) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete err_;
  }
  if (err) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      err = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, err, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  err_ = err;
  // @@protoc_insertion_point(field_set_allocated:action_message.rpc_response.err)
}

// optional bytes data = 4;
inline bool rpc_response::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rpc_response::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& rpc_response::data() const {
  // @@protoc_insertion_point(field_get:action_message.rpc_response.data)
  return data_.GetNoArena();
}
inline void rpc_response::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:action_message.rpc_response.data)
}
#if LANG_CXX11
inline void rpc_response::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:action_message.rpc_response.data)
}
#endif
inline void rpc_response::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:action_message.rpc_response.data)
}
inline void rpc_response::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:action_message.rpc_response.data)
}
inline ::std::string* rpc_response::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:action_message.rpc_response.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* rpc_response::release_data() {
  // @@protoc_insertion_point(field_release:action_message.rpc_response.data)
  if (!has_data()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void rpc_response::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:action_message.rpc_response.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace action_message

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::action_message::object_type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::action_message::object_type>() {
  return ::action_message::object_type_descriptor();
}
template <> struct is_proto_enum< ::action_message::message_id> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::action_message::message_id>() {
  return ::action_message::message_id_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_message_2eproto
